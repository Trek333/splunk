{
    "product_version_regex": ".*",
    "description": "This app integrates with Splunk to update data on the device, in addition to investigative and ingestion actions",
    "package_name": "phantom_splunk",
    "product_name": "Splunk Enterprise",
    "product_vendor": "Splunk Inc.",
    "product_version_regex": ".*",
    "min_phantom_version": "4.0.1068",
    "logo": "logo_splunk.svg",
    "logo_dark": "logo_splunk_dark.svg",
    "license": "Copyright (c) 2014-2019 Splunk Inc.",
    "pip_dependencies": {
        "wheel": [
            {
                "module": "splunk-sdk",
                "input_file": "splunk_sdk_wheel/splunk_sdk-1.6.2-py2-none-any.whl"
            }
        ]
    },
    "configuration": {
        "device": {
            "description": "Device IP/Hostname",
            "data_type": "string",
            "order": 0,
            "required": true
        },
        "port": {
            "description": "Port",
            "data_type": "numeric",
            "order": 1,
            "default": "8089"
        },
        "username": {
            "description": "Username",
            "order": 2,
            "data_type": "string"
        },
        "password": {
            "description": "Password",
            "order": 3,
            "data_type": "password"
        },
        "timezone": {
            "data_type": "timezone",
            "order": 4,
            "description": "Splunk server timezone",
            "required": true
        },
        "verify_server_cert": {
            "data_type": "boolean",
            "order": 5,
            "description": "Verify server certificate",
            "required": true,
            "default": false
        },
        "on_poll_command": {
            "data_type": "string",
            "order": 6,
            "description": "Command for query to use with On Poll",
            "required": true,
            "value_list": [
                "search",
                "eval",
                "savedsearch",
                "stats",
                "table",
                "tstats"
            ],
            "default": "search"
        },
        "on_poll_query": {
            "data_type": "string",
            "order": 7,
            "description": "Query to use with On Poll",
            "required": false
        },
        "on_poll_display": {
            "data_type": "string",
            "order": 8,
            "description": "Fields to save with On Poll",
            "required": false
        },
        "on_poll_parse_only": {
            "data_type": "boolean",
            "order": 9,
            "description": "Parse Only",
            "required": false,
            "default": true
        },
        "max_container": {
            "data_type": "numeric",
            "order": 10,
            "description": "Max events to ingest (Default: 100)",
            "required": false,
            "default": 100
        },
        "container_name_prefix": {
            "data_type": "string",
            "order": 11,
            "description": "Name to give containers created via ingestion",
            "required": false
        },
        "container_name_values": {
            "data_type": "string",
            "order": 12,
            "description": "Values to append to container name",
            "required": false
        },
        "retry_count": {
            "description": "Number of retries",
            "data_type": "numeric",
            "order": 13,
            "default": "3",
            "required": false
        }
    },
    "actions": [
        {
            "read_only": true,
            "description": "Validate the asset configuration for connectivity. This action logs into the device to check the connection and credentials",
            "parameters": {},
            "versions": "EQ(*)",
            "action": "test connectivity",
            "output": [],
            "identifier": "test_asset_connectivity",
            "type": "test"
        },
        {
            "read_only": true,
            "description": "Get events pertaining to a host that have occurred in the last 'N' days",
            "parameters": {
                "last_n_days": {
                    "required": false,
                    "description": "Number of days ago",
                    "data_type": "numeric",
                    "order": 1
                },
                "ip_hostname": {
                    "contains": [
                        "ip",
                        "host name"
                    ],
                    "description": "Hostname/IP to search the events of",
                    "data_type": "string",
                    "required": true,
                    "primary": true,
                    "order": 0
                }
            },
            "versions": "EQ(*)",
            "render": {
                "width": 12,
                "title": "Search Results",
                "type": "table",
                "height": 5
            },
            "action": "get host events",
            "output": [
                {
                    "column_order": "0",
                    "contains": [
                        "host name"
                    ],
                    "data_path": "action_result.data.*.host",
                    "data_type": "string",
                    "column_name": "Host"
                },
                {
                    "column_order": "1",
                    "data_path": "action_result.data.*._time",
                    "data_type": "string",
                    "column_name": "Time"
                },
                {
                    "column_order": "2",
                    "data_path": "action_result.data.*._raw",
                    "data_type": "string",
                    "column_name": "Raw"
                },
                {
                    "data_path": "action_result.data.*._cd",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._si",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._bkt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.index",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._serial",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.linecount",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._indextime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourcetype",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._sourcetype",
                    "data_type": "string"
                },
                {
                    "contains": [
                        "host name"
                    ],
                    "data_path": "action_result.data.*.splunk_server",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_events",
                    "data_type": "numeric"
                },
                {
                    "contains": [
                        "ip",
                        "host name"
                    ],
                    "data_path": "action_result.parameter.ip_hostname",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.last_n_days",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "identifier": "get_host_events",
            "type": "investigate",
            "verbose": "The <b>last_n_days</b> parameter must be greater than 0"
        },
        {
            "read_only": true,
            "description": "Ingest logs from the Splunk instance",
            "parameters": {
                "container_count": {
                    "default": 100,
                    "description": "Maximum number of events to query for",
                    "data_type": "numeric"
                },
                "start_time": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                },
                "container_id": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                },
                "artifact_count": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                },
                "end_time": {
                    "description": "Parameter ignored in this app",
                    "data_type": "numeric"
                }
            },
            "versions": "EQ(*)",
            "action": "on poll",
            "output": [],
            "identifier": "on_poll",
            "type": "ingestion",
            "verbose": "The configured query is what will be used during ingestion. If you only wish to show certain fields, then you can specify these as a comma seperated list in the configuration. If left unspecified, all available fields will be added to each artifact. When limiting the amount of events to ingest, it will ingest the most recent events. By specifying the max count to 0, all events will be ingested.<br><br>"
        },
        {
            "read_only": true,
            "description": "Run a search query on the Splunk device. Please escape any quotes that are part of the query string",
            "parameters": {
                "parse_only": {
                    "description": "Parse Only",
                    "data_type": "boolean",
                    "default": true,
                    "required": true,
                    "primary": false,
                    "order": 3
                },
                "query": {
                    "required": true,
                    "description": "Query to run (in Splunk search language)",
                    "data_type": "string",
                    "contains": [
                        "splunk query"
                    ],
                    "primary": true,
                    "order": 1
                },
                "command": {
                    "description": "Beginning command (in Splunk search language)",
                    "data_type": "string",
                    "value_list": [
                        "search",
                        "eval",
                        "savedsearch",
                        "stats",
                        "table",
                        "tstats"
                    ],
                    "required": true,
                    "primary": true,
                    "default": "search",
                    "order": 0
                },
                "display": {
                    "required": false,
                    "primary": false,
                    "description": "Display fields (comma separated)",
                    "data_type": "string",
                    "order": 2
                }
            },
            "versions": "EQ(*)",
            "render": {
                "width": 10,
                "view": "splunk_views.run_query",
                "type": "custom",
                "title": "Search Results",
                "height": 5
            },
            "action": "run query",
            "output": [
                {
                    "data_path": "action_result.data.*.host",
                    "data_type": "string",
                    "contains": [
                        "host name"
                    ],
                    "example_values": [
                        "10.1.67.187:8088"
                    ],
                    "column_order": "0",
                    "column_name": "Host"
                },
                {
                    "column_order": "1",
                    "data_path": "action_result.data.*._time",
                    "data_type": "string",
                    "column_name": "Time"
                },
                {
                    "column_order": "2",
                    "data_path": "action_result.data.*._raw",
                    "data_type": "string",
                    "column_name": "Raw"
                },
                {
                    "data_path": "action_result.data.*._cd",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._si",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._bkt",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.index",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._serial",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.linecount",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._indextime",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.sourcetype",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*._sourcetype",
                    "data_type": "string"
                },
                {
                    "contains": [
                        "host name"
                    ],
                    "data_path": "action_result.data.*.splunk_server",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "example_values": [
                        "Total events: 2"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.total_events",
                    "example_values": [
                        2
                    ],
                    "data_type": "numeric"
                },
                {
                    "contains": [
                        "splunk query"
                    ],
                    "data_path": "action_result.parameter.query",
                    "example_values": [
                        "\"Send to Phantom\""
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.display",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.command",
                    "example_values": [
                        "savedsearch"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.parse_only",
                    "example_values": [
                        true,
                        false
                    ],
                    "data_type": "boolean"
                }
            ],
            "identifier": "execute_search",
            "type": "investigate",
            "verbose": "By default the widget for the &quot;run query&quot; action will show the host, time and raw fields. If you would like to see specific fields parsed out, they can be listed in a comma separated format in the &quot;display&quot; parameter.<br><br>Please keep in mind that Splunk does not always return all possible fields. Splunk may not return fields that are calculated or not present in the event.<br><br>To work around this you can force Splunk to return specific fields by using the &quot;fields&quot;. This works by appending &quot;| fields + *&quot; to your query. This will return every field, you can replace the asterisk with a comma separated list of fields.<br><br>Finally, some searches (such as those based on data models) can contain name-spaced fields. If a data model called &quot;my_model&quot; with a search &quot;my_search&quot; has a field &quot;hash&quot; then the field will be named &quot;my_search.hash&quot; and that is what must be used in the Splunk fields command and the display parameter."
        },
        {
            "read_only": false,
            "description": "Update a notable event",
            "parameters": {
                "comment": {
                    "required": false,
                    "description": "New comment for the event",
                    "data_type": "string",
                    "order": 4
                },
                "status": {
                    "value_list": [
                        "",
                        "unassigned",
                        "new",
                        "in progress",
                        "pending",
                        "resolved",
                        "closed"
                    ],
                    "required": false,
                    "description": "New status for the event",
                    "data_type": "string",
                    "order": 2
                },
                "event_ids": {
                    "required": true,
                    "description": "Event ID to update",
                    "data_type": "string",
                    "contains": [
                        "splunk notable event id"
                    ],
                    "primary": true,
                    "order": 0
                },
                "owner": {
                    "required": false,
                    "description": "New owner for the event",
                    "data_type": "string",
                    "order": 1
                },
                "urgency": {
                    "value_list": [
                        "",
                        "informational",
                        "low",
                        "medium",
                        "high",
                        "critical"
                    ],
                    "required": false,
                    "description": "New urgency for the event",
                    "data_type": "string",
                    "order": 3
                }
            },
            "versions": "EQ(*)",
            "render": {
                "width": 12,
                "height": 5,
                "type": "table",
                "title": "Update Event"
            },
            "action": "update event",
            "output": [
                {
                    "data_path": "action_result.data.*.message",
                    "example_values": [
                        "1 event updated successfully"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.data.*.success",
                    "example_values": [
                        false,
                        true
                    ],
                    "data_type": "boolean"
                },
                {
                    "data_path": "action_result.data.*.failure_count",
                    "example_values": [
                        0
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.data.*.success_count",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.status",
                    "example_values": [
                        "success"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "example_values": [
                        "Updated event id: 2CF264EE-6016-4F6A-BCC3-4B7251E113F7@@notable@@035142b19c09ab645c6bbfb847e866f4"
                    ],
                    "data_type": "string"
                },
                {
                    "contains": [
                        "splunk notable event id"
                    ],
                    "data_path": "action_result.parameter.event_ids",
                    "example_values": [
                        "1542751027.136723+0"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.owner",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.urgency",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.comment",
                    "example_values": [
                        "test comment"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary.updated_event_id",
                    "example_values": [
                        "2CF264EE-6016-4F6A-BCC3-4B7251E113F7@@notable@@035142b19c09ab645c6bbfb847e866f4"
                    ],
                    "data_type": "string"
                }
            ],
            "identifier": "update_event",
            "type": "generic",
            "verbose": "The <b>event_ids</b> parameter takes a single event_id (which has the format: 68E08B8B-A853-3A20-9768-231C97B7EE76@@notable@@a4bd78810ae8e03e285e552fac0ddb23) or an adaptive response SID + RID combo (which has the format: scheduler__admin__SplunkEnterpriseSecuritySuite__RMD515d4671130158e57_at_1532441220_4982+0).<br><br>NOTE: This action only works with a notable event from Splunk ES."
        },
        {
            "read_only": false,
            "description": "Post data to Splunk",
            "parameters": {
                "index": {
                    "required": false,
                    "description": "Index to send event to",
                    "data_type": "string",
                    "order": 4
                },
                "host": {
                    "required": false,
                    "description": "Host for event",
                    "data_type": "string",
                    "order": 1
                },
                "source_type": {
                    "default": "Automation/Orchestration Platform",
                    "required": false,
                    "description": "Type of source for event",
                    "data_type": "string",
                    "order": 3
                },
                "data": {
                    "required": true,
                    "primary": true,
                    "description": "Data to post",
                    "data_type": "string",
                    "order": 0
                },
                "source": {
                    "default": "Phantom",
                    "required": false,
                    "description": "Source for event",
                    "data_type": "string",
                    "order": 2
                }
            },
            "versions": "EQ(*)",
            "action": "post data",
            "output": [
                {
                    "data_path": "action_result.status",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.message",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.host",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.index",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.parameter.source_type",
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "data_type": "numeric"
                }
            ],
            "identifier": "post_data",
            "type": "generic",
            "verbose": "This action creates an event on Splunk with the data included in the <b>data</b> parameter. If not specified the parameters will default to the following:<ul><li><b>host</b> - The IP of the Phantom instance running the action</li><li><b>index</b> - The default index configured on the Splunk instance</li><li><b>source</b> - &quot;Phantom&quot;</li><li><b>source_type</b> - &quot;Automation/Orchestration Platform&quot;</li></ul>"
        }
    ],
    "logo": "logo_splunk.svg",
    "configuration": {
        "username": {
            "description": "Username",
            "data_type": "string",
            "order": 2
        },
        "on_poll_parse_only": {
            "default": true,
            "required": false,
            "order": 9,
            "data_type": "boolean",
            "description": "Parse Only"
        },
        "container_name_values": {
            "required": false,
            "order": 12,
            "data_type": "string",
            "description": "Values to append to container name"
        },
        "max_container": {
            "default": 100,
            "required": false,
            "order": 10,
            "data_type": "numeric",
            "description": "Max events to ingest (Default: 100)"
        },
        "verify_server_cert": {
            "default": false,
            "required": true,
            "order": 5,
            "data_type": "boolean",
            "description": "Verify server certificate"
        },
        "container_name_prefix": {
            "required": false,
            "order": 11,
            "data_type": "string",
            "description": "Name to give containers created via ingestion"
        },
        "on_poll_command": {
            "description": "Command for query to use with On Poll",
            "data_type": "string",
            "value_list": [
                "search",
                "eval",
                "savedsearch",
                "stats",
                "table",
                "tstats"
            ],
            "required": true,
            "default": "search",
            "order": 6
        },
        "on_poll_query": {
            "required": false,
            "order": 7,
            "data_type": "string",
            "description": "Query to use with On Poll"
        },
        "on_poll_display": {
            "required": false,
            "order": 8,
            "data_type": "string",
            "description": "Fields to save with On Poll"
        },
        "device": {
            "required": true,
            "description": "Device IP/Hostname",
            "data_type": "string",
            "order": 0
        },
        "timezone": {
            "required": true,
            "order": 4,
            "data_type": "timezone",
            "description": "Splunk server timezone"
        },
        "password": {
            "description": "Password",
            "data_type": "password",
            "order": 3
        },
        "retry_count": {
            "default": "3",
            "required": false,
            "description": "Number of retries",
            "data_type": "numeric",
            "order": 13
        },
        "port": {
            "default": "8089",
            "description": "Port",
            "data_type": "numeric",
            "order": 1
        }
    },
    "product_vendor": "Splunk Inc.",
    "pip_dependencies": {
        "wheel": [
            {
                "module": "splunk-sdk",
                "input_file": "splunk_sdk_wheel/splunk_sdk-1.6.2-py2-none-any.whl"
            }
        ]
    },
    "logo_dark": "logo_splunk_dark.svg",
    "publisher": "Phantom",
    "name": "Splunk",
    "license": "Copyright (c) 2014-2019 Splunk Inc.",
    "type": "siem",
    "main_module": "splunk_connector.pyc",
    "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
    "app_version": "1.3.27",
    "min_phantom_version": "3.5.180",
    "product_name": "Splunk Enterprise"
}