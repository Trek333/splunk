{
    "appid": "91883aa8-9c81-470b-97a1-5d8f7995f560",
    "name": "Splunk",
    "description": "This app integrates with a Splunk device to implement investigative actions like 'run query' and 'get host events'.",
    "publisher": "Phantom",
    "type": "siem",
    "main_module": "splunk_connector.pyc",
    "app_version": "1.3.2",
    "utctime_updated": "2017-05-04T22:06:40.000000Z",
    "package_name": "phantom_splunk",
    "product_name": "Splunk Enterprise",
    "product_vendor": "Splunk Inc.",
    "product_version_regex": ".*",
    "min_phantom_version": "2.0.264",
    "logo": "splunk.png",
    "license": "Copyright (c) Phantom Cyber Corporation 2015-2017",
    "configuration": {
      "device": {
        "description": "Device IP/Hostname",
        "data_type": "string",
        "order": 0,
        "required": true
      },
      "port": {
        "description": "Port",
        "data_type": "numeric",
        "order": 1,
        "default": "8089"
      },
      "username": {
        "description": "Username",
        "order": 2,
        "data_type": "string"
      },
      "password": {
        "description": "Password",
        "order": 3,
        "data_type": "password"
      },
      "timezone": {
        "data_type": "timezone",
        "order": 4,
        "description": "Splunk server timezone",
        "required": true
      },
      "verify_server_cert": {
        "data_type": "boolean",
        "order": 5,
        "description": "Verify server certificate",
        "required": true,
        "default": false
      }
    },
    "actions": [
      {
        "action": "test connectivity",
        "description": "Validate the asset configuration for connectivity. This action logs into the device to check the connection and credentials.",
        "type": "test",
        "identifier": "test_asset_connectivity",
        "read_only": true,
        "parameters": {
        },
        "output": [],
        "versions":"EQ(*)"
      },
      {
        "action": "get host events",
        "description": "Get events pertaining to a host that have occurred in the last 'N' days.",
        "verbose": "The <b>last_n_days</b> parameter must be greater than 0",
        "type": "investigate",
        "identifier": "get_host_events",
        "read_only": true,
        "parameters": {
          "ip_hostname": {
            "description": "Hostname/IP to search the events of",
            "data_type": "string",
            "order": 0,
            "contains": [ "ip", "host name" ],
            "required": true,
            "primary": true
          },
          "last_n_days": {
            "description": "Number of days ago",
            "data_type": "numeric",
            "order": 1,
            "required": false
          }
        },
        "render": {
          "type": "table",
          "width": 12,
          "height": 5,
          "title": "Search Results"
        },
        "output": [
          {
            "data_path": "action_result.data.*.host",
            "column_name": "Host",
            "column_order": "0",
            "data_type": "string",
            "contains": ["host name"]
          },
          {
            "data_path": "action_result.data.*._time",
            "column_name": "Time",
            "column_order": "1",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._raw",
            "column_name": "Raw",
            "column_order": "2",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._cd",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._si",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._bkt",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.index",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.source",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._serial",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.linecount",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._indextime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.sourcetype",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._sourcetype",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.splunk_server",
            "data_type": "string",
            "contains": ["host name"]
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.summary.total_events",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.parameter.ip_hostname",
            "data_type": "string",
            "contains": [ "ip", "host name" ]
          },
          {
            "data_path": "action_result.parameter.last_n_days",
            "data_type": "numeric"
          },
          {
            "data_path": "summary.total_objects",
            "data_type": "numeric"
          },
          {
            "data_path": "summary.total_objects_successful",
            "data_type": "numeric"
          }
        ],
        "versions": "EQ(*)"
      },
      {
        "action": "run query",
        "description": "Run a search query on the Splunk device. Please escape any quotes that are part of the query string.",
        "verbose": "By default the widget for the &quot;run query&quot; action will show the host, time and raw fields. If you would like to see specific fields parsed out, they can be listed in a comma separated format in the &quot;display&quot; parameter.<br><br>Please keep in mind that Splunk does not always return all possible fields. Splunk may not return fields that are calculated or not present in the event.<br><br>To work around this you can force Splunk to return specific fields by using the &quot;fields&quot;. This works by appending &quot;| fields + *&quot; to your query. This will return every field, you can replace the asterisk with a comma separated list of fields.<br><br>Finally, some searches (such as those based on data models) can contain name-spaced fields. If a data model &quot;my_model&quot; with a search &quot;my_search&quot; that has a field &quot;hash&quot; then the field will be named &quot;my_search.hash&quot; and that is what must be used in the Splunk fields command and the display parameter.",
        "type": "investigate",
        "identifier": "execute_search",
        "read_only": true,
        "parameters": {
          "query": {
            "description": "Query to run (in Splunk search language)",
            "data_type": "string",
            "order": 0,
            "required": true,
            "primary": true,
            "contains": [ "splunk query" ]
          },
          "display": {
            "description": "Display fields (comma separated)",
            "data_type": "string",
            "order": 1,
            "required": false,
            "primary": false
          }
        },
        "render": {
          "type": "custom",
          "width": 10,
          "height": 5,
          "view": "splunk_views.run_query",
          "title": "Search Results"
        },
        "output": [
          {
            "data_path": "action_result.data.*.host",
            "column_name": "Host",
            "column_order": "0",
            "data_type": "string",
            "contains": ["host name"]
          },
          {
            "data_path": "action_result.data.*._time",
            "column_name": "Time",
            "column_order": "1",
            "data_type": "string",
            "contains": []
          },
          {
            "data_path": "action_result.data.*._raw",
            "column_name": "Raw",
            "column_order": "2",
            "data_type": "string",
            "contains": []
          },
          {
            "data_path": "action_result.data.*._cd",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._si",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._bkt",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.index",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.source",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._serial",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.linecount",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._indextime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.sourcetype",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*._sourcetype",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.splunk_server",
            "data_type": "string",
            "contains": ["host name"]
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.summary.total_events",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.parameter.query",
            "data_type": "string",
            "contains": [ "splunk query" ]
          },
          {
            "data_path": "action_result.parameter.display",
            "data_type": "string"
          },
          {
            "data_path": "summary.total_objects",
            "data_type": "numeric"
          },
          {
            "data_path": "summary.total_objects_successful",
            "data_type": "numeric"
          }
        ],
        "versions": "EQ(*)"
      },
      {
        "action": "update event",
        "description": "Update a notable event",
        "verbose": "The <b>event_ids</b> parameter takes a comma separated list of notable event IDs, which have the format: 68E08B8B-A853-3A20-9768-231C97B7EE76@@notable@@a4bd78810ae8e03e285e552fac0ddb23<br><br>NOTE: This action only works with notable events on Splunk ES",
        "type": "generic",
        "identifier": "update_event",
        "read_only": false,
        "parameters": {
          "event_ids": {
            "description": "Events IDs to update",
            "data_type": "string",
            "contains": [ "splunk notable event id" ],
            "required": true,
            "order": 0,
            "primary": true
          },
          "comment": {
            "description": "New comment for the event",
            "data_type": "string",
            "required": false,
            "order": 4
          },
          "status": {
            "description": "New status for the event",
            "data_type": "string",
            "value_list": [
              "",
              "unassigned",
              "new",
              "in progress",
              "pending",
              "resolved",
              "closed"
            ],
            "required": false,
            "order": 2
          },
          "urgency": {
            "description": "New urgency for the event",
            "data_type": "string",
            "value_list": [
              "",
              "informational",
              "low",
              "medium",
              "high",
              "critical"
            ],
            "required": false,
            "order": 3
          },
          "owner": {
            "description": "New owner for the event",
            "data_type": "string",
            "required": false,
            "order": 1
          }
        },
        "output": [
          {
            "data_path": "action_result.data.*.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.success",
            "data_type": "boolean"
          },
          {
            "data_path": "action_result.data.*.failure_count",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.data.*.success_count",
            "data_type": "numeric"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.event_ids",
            "data_type": "string",
            "contains": [ "splunk notable event id" ]
          },
          {
            "data_path": "action_result.parameter.owner",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.urgency",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.comment",
            "data_type": "string"
          },
          {
            "data_path": "summary.total_objects",
            "data_type": "numeric"
          },
          {
            "data_path": "summary.total_objects_successful",
            "data_type": "numeric"
          }
        ],
        "versions": "EQ(*)"
      },
      {
        "action": "post data",
        "description": "Post data to Splunk",
        "verbose": "This action creates an event on Splunk with the data included in the <b>data</b> parameter. If not specified the parameters will default to the following:<ul><li><b>host</b> - The IP of the Phantom instance running the action</li><li><b>index</b> - The default index configured on the Splunk instance</li><li><b>source</b> - &quot;Phantom&quot;</li><li><b>source_type</b> - &quot;Automation/Orchestration Platform&quot;</li></ul>",
        "type": "generic",
        "identifier": "post_data",
        "read_only": false,
        "parameters": {
          "data": {
            "description": "Data to post",
            "data_type": "string",
            "required": true,
            "order": 0,
            "primary": true
          },
          "host": {
            "description": "Host for event",
            "data_type": "string",
            "required": false,
            "order": 1
          },
          "index": {
            "description": "Index to send event to",
            "data_type": "string",
            "required": false,
            "order": 4
          },
          "source": {
            "description": "Source for event",
            "data_type": "string",
            "required": false,
            "default": "Phantom",
            "order": 2
          },
          "source_type": {
            "description": "Type of source for event",
            "data_type": "string",
            "required": false,
            "default": "Automation/Orchestration Platform",
            "order": 3
          }
        },
        "output": [
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.message",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.data",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.host",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.index",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.source_type",
            "data_type": "string"
          },
          {
            "data_path": "summary.total_objects",
            "data_type": "numeric"
          },
          {
            "data_path": "summary.total_objects_successful",
            "data_type": "numeric"
          }
        ],
        "versions": "EQ(*)"
      }
    ]
}
